<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/tx/spring-aop.xsd
		">

	<context:annotation-config/>
	<context:component-scan base-package="kg.enesaitech.freelancer.*" />

	<tx:annotation-driven proxy-target-class="true"/>
	
<!-- 	database configurations -->
	<import resource="spring_files/data-source.xml"/>
	<import resource="spring_files/hibernate-beans.xml"/>
<!-- 	mapper configurations -->
	<import resource="spring_files/dozer-beans.xml"/>
<!-- 	security configurations -->
<!-- 	<import resource="spring_files/shiro-beans.xml"/> -->

	<bean id="liquibase" class="liquibase.integration.spring.SpringLiquibase">
	      <property name="dataSource" ref="myJdbcDataSource" />
	      <property name="changeLog" value="classpath:liquibase-changeLog.xml" />
	</bean>
	
	
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
	    <property name="securityManager" ref="securityManager"/>
	    <property name="loginUrl" value="/login.html"/>
	    <property name="successUrl" value="/rest/security/redirect"/>
	    <property name="unauthorizedUrl" value="/unauthorized.html"/>
<!-- 	    <property name="redirectUrl" value="/unauthorized.html"/>  -->

	    <property name="filterChainDefinitions">
<!-- 	    	<value></value> -->
	        <value>
	        	/login.html = authc
	            /logout = logout
	            /apps/admin/** = authc, roles[admin]
	            /apps/manager/** = authc, roles[manager]
				/apps/director/** = authc, roles[director]
				#/apps/sales/** = authc, roles[sales]
				/apps/hr_manager/** = authc, roles[hr_manager]
				/apps/accountant/** = authc, roles[accountant]
				/apps/warehouse/** = authc, roles[warehouse]
				/apps/modeling/** = authc, roles[modeling]
				/apps/cutting/** = authc, roles[cutting]
				/apps/embroidery/** = authc, roles[embroidery]
				/apps/technologist/** = authc, roles[technologist]
				/apps/testing/** = authc, roles[testing]
				/apps/example/** = authc, roles[]
				
				
				/assets/** anon
				
				/rest/security/** = authc
				/rest/** = authc
	        </value>
	    </property>
	</bean>
		
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
	    <!-- Single realm app.  If you have multiple realms, use the 'realms' property instead. -->
	    <property name="realm" ref="myRealm"/>
	    <!-- By default the servlet container sessions will be used.  Uncomment this line
	         to use shiro's native sessions (see the JavaDoc for more): -->
	    <property name="sessionMode" value="native"/>
	</bean>
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
	
	<!-- Define the Shiro Realm implementation you want to use to connect to your back-end -->
	<!-- security datasource: -->
	<bean id="myRealm" class="kg.enesaitech.freelancer.security.MyRealm">
		<property name="credentialsMatcher" ref="matcher"/>
	</bean>
	
	<bean id="matcher" class="kg.enesaitech.freelancer.security.MyCredentialsMatcher"/>
	<bean id="anyofroles" class="kg.enesaitech.freelancer.security.AnyOfRolesAuthorizationFilter"/>
		
</beans>